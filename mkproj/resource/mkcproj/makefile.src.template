# MIT License
# -----------
# 
# Copyright (c) 2018-2021 Shift Clan (http://shift-ac.com)
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# ShiftAC's C/C++ makefile template for mkcproj 1.4

TARGET := ../bin
PACKAGE_PREFIX :=
CC := gcc
CXX := g++
CMACRO := 
CXXMACRO := $(CMACRO)
COMMONFLAGS := 
CFLAGS := $(CMACRO) $(COMMONFLAGS)
CXXFLAGS := $(CXXMACRO) $(COMMONFLAGS)
IGNORE_SRC :=
GEN_SRC := 
BIN_SRC := 
SRC := $(filter-out $(BIN_SRC) $(IGNORE_SRC) $(GEN_SRC),$(wildcard *.c) $(wildcard *.cc))
OUT := $(addsuffix .o, $(basename $(SRC) $(GEN_SRC)))
SCRIPTS_DIR := ./scripts
BIN_SCRIPT := 
LIB := 
PROGS := $(BIN_SCRIPT) $(basename $(BIN_SRC))
PROGNAMES := $(addprefix $(PACKAGE_PREFIX)-,$(PROGS))

define gen-target-rule-cpp
$(CURRENT_PREFIX)-$(basename $(1)): $(1) $(subst $(SPACE),\ ,$(TOP))/this.o
	$(CXX) $(CXXFLAGS) $(LOCAL_CXXFLAGS) -o "$(TARGET)/$$(shell echo $$@ | tr '[A-Z]' '[a-z]')" $$< "$(TOP)/this.o" $(LIB)
endef

define gen-target-rule-cc
$(CURRENT_PREFIX)-$(basename $(1)): $(1) $(subst $(SPACE),\ ,$(TOP))/this.o
	$(CXX) $(CXXFLAGS) $(LOCAL_CXXFLAGS) -o "$(TARGET)/$$(shell echo $$@ | tr '[A-Z]' '[a-z]')" $$< "$(TOP)/this.o" $(LIB)
endef

define gen-target-rule-c
$(CURRENT_PREFIX)-$(basename $(1)): $(1) $(subst $(SPACE),\ ,$(TOP))/this.o
	$(CC) $(CFLAGS) $(LOCAL_CFLAGS) -o "$(TARGET)/$$(shell echo $$@ | tr '[A-Z]' '[a-z]')" $$< "$(TOP)/this.o" $(LIB)
endef

define gen-target-rule-sh
$(1): $(subst $(SPACE),\ ,$(SCRIPTS_DIR))/%.sh
	cp $$< $(TARGET)/$$@
endef

define gen-source-rule-all-c
$(1): $(SCRIPTS_DIR)/generate$(1).sh
	$(SCRIPTS_DIR)/generate$$@.sh > $$@
endef

$(foreach i,$(filter %.cpp,$(PROG_SRC)),$(eval $(call gen-target-rule-cpp,$(i))))
$(foreach i,$(filter %.cc,$(PROG_SRC)),$(eval $(call gen-target-rule-cc,$(i))))
$(foreach i,$(filter %.c,$(PROG_SRC)),$(eval $(call gen-target-rule-c,$(i))))
$(foreach i,$(PROGS_SH),$(eval $(call gen-target-rule-sh,$(i))))
$(foreach i,$(GEN_SRC),$(eval $(call gen-source-rule-all-c,$(i))))

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $<

%.o: %.cc
	$(CXX) $(CXXFLAGS) -c $<

%.o: %.c
	$(CC) $(CFLAGS) -c $<

.PHONY: all
all: depend $(GEN_SRC) $(OUT) $(PROGNAMES)

.PHONY: sourceClean
sourceClean:
	-rm $(GEN_SRC)

.PHONY: clean
clean: sourceClean
	-rm $(OUT) $(PROGNAMES) *~ Makefile.dep 2> /dev/null

.PHONY: linecount
linecount: clean
	-find | xargs cat 2> /dev/null | wc -l

depend:
	-makedepend -f- -- $(CFLAGS) -- $(SRC) > Makefile.dep 2> /dev/null

# make `make` happy...
Makefile.dep:
	touch Makefile.dep

-include Makefile.dep
